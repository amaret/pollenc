#!/bin/bash

# Translate the test using cloud compiler.  

export BUN1=@pollen-core
export BUN3=@environments
export TDIR=`dirname $2`
export TST=`basename $2`

if [ $1 == 'efm32' ] ; then
        export TOOLCHN="efm32-gcc"
        export MCU="EFM32ZG108F32"
elif [ $1 == 'arm' ] ; then
        echo "unimplemented"
        exit 1
elif [ $1 == 'avr' ] ; then
        echo "unimplemented"
        exit 1
elif [ $1 == 'localhost' ] ; then
        echo "unimplemented"
        exit 1
else
        echo >&2 "You must supply a toolchain argument!"
        echo "Valid options are efm32, avr, localhost, arm "
        exit 1
fi
# make a unique output dir so no collisions during high load testing
export OUTDIR=`mktemp -d -t ClcOut_$$XXXX`
echo
echo TEST put $TST through cloud compiler with $TOOLCHN
echo Output dir is $OUTDIR

echo "============================= ${TST} ============================="

if [ $1 == 'localhost' ] ; then
        echo "unimplemented"
        exit 1
elif [ $1 == 'arm' ] ; then
        echo "unimplemented"
        exit 1
elif [ $1 == 'efm32' ] ; then
        python ~/pollenc -o $OUTDIR -t $TOOLCHN --m $MCU \
        -b $BUN1  -b $BUN3 \
        -vvv \
        --cflags="-v" \
        $TDIR/$TST
else
        echo "unimplemented"
        exit 1
fi

